plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'com.diffplug.spotless' version '6.11.0'
	id 'java'
	id 'jacoco'
}

group = 'ee.coffeeshop'
version = '0.0.1-SNAPSHOT'

wrapper {
	distributionType = Wrapper.DistributionType.ALL
	gradleVersion = 7.5
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('testcontainers_version', "1.17.4")
	set('liquibase_version', "4.15.0")
}

dependencies {
	implementation "org.liquibase:liquibase-core:${liquibase_version}"
	implementation 'org.springframework:spring-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:r2dbc-postgresql'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.postgresql:r2dbc-postgresql'
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainers_version}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

spotless {
	format 'misc', {
		target '*.gradle', '*.md', '.gitignore'
		targetExclude 'bin/', 'out/'

		trimTrailingWhitespace()
		indentWithTabs()
		endWithNewline()
	}
	java {
		eclipse()
		removeUnusedImports()
	}
}

test {
	finalizedBy jacocoTestReport
}
jacocoTestReport {
	dependsOn test
}
check {
	dependsOn jacocoTestCoverageVerification
}

jacocoTestCoverageVerification {
	violationRules {
		failOnViolation = true
		rule {
			limit {
				minimum = 0.8
			}
		}
	}
}
